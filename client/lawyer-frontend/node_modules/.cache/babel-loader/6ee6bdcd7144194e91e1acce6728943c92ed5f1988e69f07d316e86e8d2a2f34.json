{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\Cllg_Projects\\\\LAWYER_APPOINTMENT\\\\practice\\\\lawyer-frontend\\\\src\\\\component\\\\TextInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Eye, EyeOff } from \"lucide-react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextInput = ({\n  picture = null,\n  disabled = false,\n  readOnly = false,\n  label = \"\",\n  isPassword = false,\n  isNumber = false,\n  onValidationChange = () => {}\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [validationMessage, setValidationMessage] = useState(\"\");\n  const togglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n\n  // Validation logic\n  const validateInput = value => {\n    let message = \"\";\n    if (!readOnly) {\n      if (!value) {\n        message = \"This field cannot be empty.\";\n      } else if (isNumber && !/^\\d+$/.test(value)) {\n        message = \"Please enter only numbers.\";\n      } else if (isPassword) {\n        if (value.length < 6) {\n          message = \"Password must be at least 6 characters.\";\n        } else if (value.length > 20) {\n          message = \"Password cannot exceed 20 characters.\";\n        }\n      }\n    }\n    setValidationMessage(message);\n    onValidationChange(message === \"\");\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n  const handleBlur = () => {\n    validateInput(inputValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-input-wrapper\",\n      children: [picture && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-input-icon\",\n        children: picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: isPassword && !showPassword ? \"password\" : isNumber ? \"text\" : \"text\",\n        className: `text-input-field ${picture ? \"with-icon\" : \"\"}`,\n        placeholder: label,\n        disabled: disabled,\n        readOnly: readOnly,\n        value: inputValue,\n        onChange: handleInputChange,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), isPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-input-icon toggle-password\",\n        onClick: togglePasswordVisibility,\n        children: showPassword ? /*#__PURE__*/_jsxDEV(EyeOff, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), validationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-input-validation\",\n      children: validationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"v8qaDtKvibAHTdtItNTXyEPNgEQ=\");\n_c = TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","Eye","EyeOff","jsxDEV","_jsxDEV","TextInput","picture","disabled","readOnly","label","isPassword","isNumber","onValidationChange","_s","showPassword","setShowPassword","inputValue","setInputValue","validationMessage","setValidationMessage","togglePasswordVisibility","prev","validateInput","value","message","test","length","handleInputChange","e","target","handleBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onBlur","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/kumar/Desktop/Cllg_Projects/LAWYER_APPOINTMENT/practice/lawyer-frontend/src/component/TextInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\nimport \"./style.css\";\r\n\r\nexport const TextInput = ({\r\n  picture = null,\r\n  disabled = false,\r\n  readOnly = false,\r\n  label = \"\",\r\n  isPassword = false,\r\n  isNumber = false,\r\n  onValidationChange = () => {},\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [validationMessage, setValidationMessage] = useState(\"\");\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  // Validation logic\r\n  const validateInput = (value) => {\r\n    let message = \"\";\r\n\r\n    if (!readOnly) {\r\n      if (!value) {\r\n        message = \"This field cannot be empty.\";\r\n      } else if (isNumber && !/^\\d+$/.test(value)) {\r\n        message = \"Please enter only numbers.\";\r\n      } else if (isPassword) {\r\n        if (value.length < 6) {\r\n          message = \"Password must be at least 6 characters.\";\r\n        } else if (value.length > 20) {\r\n          message = \"Password cannot exceed 20 characters.\";\r\n        }\r\n      }\r\n    }\r\n\r\n    setValidationMessage(message);\r\n    onValidationChange(message === \"\");\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    validateInput(inputValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-input-container\">\r\n      <div className=\"text-input-wrapper\">\r\n        {picture && <span className=\"text-input-icon\">{picture}</span>}\r\n        <input\r\n          type={\r\n            isPassword && !showPassword\r\n              ? \"password\"\r\n              : isNumber\r\n              ? \"text\"\r\n              : \"text\"\r\n          }\r\n          className={`text-input-field ${picture ? \"with-icon\" : \"\"}`}\r\n          placeholder={label}\r\n          disabled={disabled}\r\n          readOnly={readOnly}\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          onBlur={handleBlur}\r\n        />\r\n        {isPassword && (\r\n          <span\r\n            className=\"text-input-icon toggle-password\"\r\n            onClick={togglePasswordVisibility}\r\n          >\r\n            {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\r\n          </span>\r\n        )}\r\n      </div>\r\n      {validationMessage && (\r\n        <p className=\"text-input-validation\">{validationMessage}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}