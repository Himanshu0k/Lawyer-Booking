{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\Cllg_Projects\\\\LAWYER_APPOINTMENT\\\\practice\\\\lawyer-frontend\\\\src\\\\component\\\\TextInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Eye, EyeOff } from \"lucide-react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInput = ({\n  label,\n  type = \"standard\",\n  isDisabled = false,\n  password = false,\n  inputType = \"text\",\n  readOnly = false,\n  validation = \"\",\n  icon = null,\n  showPasswordToggle = false,\n  className = \"\",\n  ...props\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleTogglePassword = () => {\n    setShowPassword(prev => !prev);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n    if (error) setError(\"\"); // Clear the error on typing\n  };\n  const handleSubmit = () => {\n    if (!inputValue.trim()) {\n      setError(\"This field cannot be empty\");\n    } else if (validation && !new RegExp(validation).test(inputValue)) {\n      setError(\"Invalid input format\");\n    } else {\n      setError(\"\");\n      alert(\"Form submitted successfully!\");\n    }\n  };\n  const inputClass = type === \"filled\" ? \"text-input-filled\" : type === \"outlined\" ? \"text-input-outlined\" : \"text-input-standard\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `text-input-container ${className}`,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"text-input-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-input-wrapper ${inputClass}`,\n      children: [icon && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-input-icon\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: password && !showPassword ? \"password\" : inputType,\n        disabled: isDisabled,\n        readOnly: readOnly,\n        className: \"text-input-field\",\n        value: inputValue,\n        onChange: handleInputChange,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), password && showPasswordToggle && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleTogglePassword,\n        className: \"text-input-toggle\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(EyeOff, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-input-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"text-input-submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TextInput, \"vj12EgS7tVVB+NqNtj/ggNm3qAk=\");\n_c = TextInput;\nexport default TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","Eye","EyeOff","jsxDEV","_jsxDEV","TextInput","label","type","isDisabled","password","inputType","readOnly","validation","icon","showPasswordToggle","className","props","_s","showPassword","setShowPassword","inputValue","setInputValue","error","setError","handleTogglePassword","prev","handleInputChange","e","target","value","handleSubmit","trim","RegExp","test","alert","inputClass","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onChange","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/kumar/Desktop/Cllg_Projects/LAWYER_APPOINTMENT/practice/lawyer-frontend/src/component/TextInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\nimport \"./style.css\";\r\n\r\nconst TextInput = ({\r\n  label,\r\n  type = \"standard\",\r\n  isDisabled = false,\r\n  password = false,\r\n  inputType = \"text\",\r\n  readOnly = false,\r\n  validation = \"\",\r\n  icon = null,\r\n  showPasswordToggle = false,\r\n  className = \"\",\r\n  ...props\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleTogglePassword = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n    if (error) setError(\"\"); // Clear the error on typing\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!inputValue.trim()) {\r\n      setError(\"This field cannot be empty\");\r\n    } else if (validation && !new RegExp(validation).test(inputValue)) {\r\n      setError(\"Invalid input format\");\r\n    } else {\r\n      setError(\"\");\r\n      alert(\"Form submitted successfully!\");\r\n    }\r\n  };\r\n\r\n  const inputClass =\r\n    type === \"filled\"\r\n      ? \"text-input-filled\"\r\n      : type === \"outlined\"\r\n      ? \"text-input-outlined\"\r\n      : \"text-input-standard\";\r\n\r\n  return (\r\n    <div className={`text-input-container ${className}`}>\r\n      {label && <label className=\"text-input-label\">{label}</label>}\r\n      <div className={`text-input-wrapper ${inputClass}`}>\r\n        {icon && <span className=\"text-input-icon\">{icon}</span>}\r\n        <input\r\n          type={password && !showPassword ? \"password\" : inputType}\r\n          disabled={isDisabled}\r\n          readOnly={readOnly}\r\n          className=\"text-input-field\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          {...props}\r\n        />\r\n        {password && showPasswordToggle && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleTogglePassword}\r\n            className=\"text-input-toggle\"\r\n          >\r\n            {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\r\n          </button>\r\n        )}\r\n      </div>\r\n      {error && <p className=\"text-input-error\">{error}</p>}\r\n      <button className=\"text-input-submit\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}